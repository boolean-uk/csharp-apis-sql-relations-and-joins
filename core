CREATE TABLE directors(
   id serial PRIMARY KEY NOT NULL,
   name varchar(255) NOT NULL,
   country varchar(255) NOT NULL
);

INSERT INTO directors(name, country)
VALUES
('Stanley Kubrick', 'USA'),
('George Lucas', 'USA'),
('Robert Mulligan', 'USA'),
('James Cemeron', 'Canada'),
('David Lean', 'UK'),
('Antohny Mann', 'USA'),
('Theodoros Angelopoulos', 'Greece'),
('Paul Verhoeven', 'Greece'),
('Krzysztof Kieslowski', 'Poland'),
('Jean-Paul Rappeneau', 'France');

CREATE TABLE writers(
   id serial PRIMARY KEY NOT NULL,
   name varchar(255) NOT NULL,
   email varchar(255) NOT NULL
);

INSERT INTO writers(name, email)
VALUES
('Arthur C Clarke', 'arthur@clarke.com'),
('George Lucas', 'george@email.com'),
('Herper Lee', 'harper@lee.com'),
('James Cameron', 'james@cameron.com'),
('Boris Pasternak', 'boris@boris.com'),
('Frederick Frank', 'fred@frank.com'),
('Theodoros Angelopoulos', 'theo@angelopoulos.com'),
('Erik Hazelhoff Roelfzema', 'erik@roelfzema.com'),
('Krzysztof Kieslowsk', 'email@email.com'),
('Edmond Rostand', 'edmond@rostand.com');

CREATE TABLE stars(
   id serial PRIMARY KEY NOT NULL,
   name varchar(255) NOT NULL,
   dob DATE NOT NULL
);

INSERT INTO stars(name, dob)
VALUES
('Keir Dullea', to_date('1936-05-30', 'yyyy-mm-dd')),
('Mark Hamill', to_date('1951-09-25', 'yyyy-mm-dd')),
('Gregory Peck', to_date('1916-04-05', 'yyyy-mm-dd')),
('Leonardo DiCaprio', to_date('1974-11-11', 'yyyy-mm-dd')),
('Julie Christie', to_date('1940-04-14', 'yyyy-mm-dd')),
('Charlton Heston', to_date('1923-10-04', 'yyyy-mm-dd')),
('Manos Katrakis', to_date('1908-08-14', 'yyyy-mm-dd')),
('Rutger Hauer', to_date('1944-01-23', 'yyyy-mm-dd')),
('Manos Katrakis', to_date('1964-03-09', 'yyyy-mm-dd')),
('Gerard Depardieu', to_date('1948-12-27', 'yyyy-mm-dd'));

SELECT * FROM stars;

CREATE TABLE films(
   id serial PRIMARY KEY NOT NULL,
   title varchar(255) NOT NULL,
   release_year char(4) NOT NULL,
   genre varchar(255) NOT NULL,
   score integer NOT NULL,
   fk_writer integer NOT NULL,
   fk_director integer NOT NULL,
   fk_star integer NOT NULL,
   FOREIGN KEY(fk_writer) REFERENCES writers(id),
   FOREIGN KEY(fk_director) REFERENCES directors(id),
   FOREIGN KEY(fk_star) REFERENCES stars(id)
);

INSERT INTO films (title, release_year, genre, score, fk_writer, fk_director, fk_star)
VALUES
('2001: A Space Odyssey', 1968, 'Science Fiction', 10, 1, 1, 1),
('Star Wars: A New Hope', 1977, 'Science Fiction', 7, 2, 2, 2),
('To Kill A Mockingbird', 1962, 'Drama', 10, 3, 3, 3),
('Titanic', 1997, 'Romance', 5, 4, 4, 4),
('Dr Zhivago', 1965, 'Historical', 8, 5, 5, 5),
('El Cid', 1961, 'Historical', 6, 6, 6, 6),
('Voyage to Cythera', 1984, 'Drama', 8, 7, 7, 7),
('Soldier of Orange', 1977, 'Thriller', 8, 8, 8, 8),
('Three Colours: Blue', 1993, 'Drama', 8, 9, 9, 9),
('Cyrano de Bergerac', 1990, 'Historical', 9, 10, 10, 10);


--i Show the title and director name for all films
SELECT films.title, directors.name
FROM films
INNER JOIN directors
ON (directors.id = films.fk_director);


--ii Show the title, director and star name for all films
SELECT films.title, directors.name, stars.name
FROM films
INNER JOIN directors
ON (films.fk_director = directors.id)
INNER JOIN stars
ON (films.fk_star = stars.id);

--iii Show the title of films where the director is from the USA
SELECT films.title, directors.country
FROM films 
INNER JOIN directors
ON (films.fk_director = directors.id) AND (directors.country = 'USA');


--iv Show only those films where the writer and the director are the same person
SELECT films.title, directors.name, writers.name
FROM films
INNER JOIN directors
ON(films.fk_director = directors.id) 
INNER JOIN writers
ON(writers.name = directors.name);


--v Show directors and film titles for films with a score of 8 or higher
SELECT films.title, directors.name, films.score
FROM films
INNER JOIN directors
ON(films.fk_director = directors.id) AND (films.score >= 8);

--vi Make at least 5 more queries to demonstrate your understanding of joins, and other relationships between tables
SELECT films.title, writers.name 
FROM films 
INNER JOIN writers
ON(films.fk_writer = writers.id);

SELECT films.title, directors.name
FROM films 
INNER JOIN directors
On(films.fk_director = directors.id) AND (directors.name LIKE '%Jean%');

SELECT films.title, directors.name, writers.name, stars.name
FROM films
INNER JOIN directors
ON (films.fk_director = directors.id)
INNER JOIN writers
ON (films.fk_writer = writers.id)
INNER JOIN stars
ON (films.fk_star = stars.id);

SELECT films.title, directors.name, directors.country, films.score
FROM films
INNER JOIN directors 
ON (films.fk_director = directors.id) AND (directors.country = 'USA') AND (films.score <= 7);

SELECT films.title, stars.name 
FROM films
INNER JOIN stars
ON (films.fk_star = stars.id) AND (films.genre = 'Drama');
